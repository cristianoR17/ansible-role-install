[general]

#include pesquisa_cti.conf
static=yes
writeprotect=yes
autofallthrough=no
clearglobalvars=no
proorityjumping=no

[globals]
REAL = 0 
CENT = 0
RETORNO = 0
DEBITOS = 0
INEXISTENTE = 1 
EXEAGI = 0
CONTEXTO = 0
RDOMINIO = 0
BADM = 0
CPF = 0
TELEFONE = 0
CEP = 0
IDREGIAO = 0
DT_INICIAL = 0
DT_FINAL = 0
COD_MENU = 0 
COD_OPCAO = 0
CONTA=0
CONSULT_MSG=0
CONSULT_NU=0
;/home/extend/ura
URA=0

AbsoluteTimeout = 35
LANGUAGE = pt
; Dial timeout - 20sec.
DIAL_TOUT=20
; Digit timeout - 3sec.
DIGIT_TOUT=8
; Response timeout - 10sec.
RESP_TOUT=10
;Set toda conta como invalida

ROTA0=PJSIP/COMUNIX/

;Verificar arquivo: /home/extend/servidor_gravacoes
SUPPORT_MONITOR_PATH_RECEPTIVO=/home/gravacoes/receptivo/
SERVIDOR_RECEPTIVO=http://192.168.0.92/gravacoes/receptivo/

SUPPORT_MONITOR_PATH_ATIVO=/dev/shm/
SERVIDOR_ATIVO=http://200.192.0.150/gravacoes/ativo/

;Verificar arquivo: /home/extend/servidor_gravacoes
SUPPORT_MONITOR_PATH_VIDEO=/home/gravacoes/video/
SERVIDOR_VIDEO=http://192.168.0.235/gravacoes/video/

QTD_NU = 21 

;############################################################################################################
[default]
exten => echo,1,Answer()
  same => n,StreamEcho(3)
  same => n,Hangup()
 
exten => video-conference,1,Answer()
  same => n,ConfBridge(guest)
  same => n,Hangup()

exten => 1010,1,Set(ID=${UNIQUEID})
exten => 1010,2,Noop(${ID})
exten => 1010,3,agi(uniqueid.agi)
exten => 1010,4,hangup()

exten => _9090.,1,Answer()
exten => _9090.,2,Wait(10)
exten => _9090.,3,hangup()

exten => _[4-6].,1,noop(${CALLERID(name)})
exten => _[4-6].,n,Set(DADOS=${EXTEN})
exten => _[4-6].,n,NoOp(${RAMAL_IP})
exten => _[4-6].,n,Set(UNIQUEIDBIL=${PJSIP_HEADER(read,UniqueidBil)})
exten => _[4-6].,n,System(mkdir /dev/shm/idbil/ &)
exten => _[4-6].,n,System(chmod -R 777 /dev/shm/idbil/${EXTEN:0:4})
exten => _[4-6].,n,System(echo ${UNIQUEIDBIL} > /dev/shm/idbil/${EXTEN:0:4})

exten => _[4-6].,n,Set(X-CTI-HEADER=${PJSIP_HEADER(read,X-CTI-HEADER)})
exten => _[4-6].,n,ExecIf($[ "${X-CTI-HEADER}" != ""]?Set(CTI=${X-CTI-HEADER}))
exten => _[4-6].,n,Gotoif($[${RAMAL} = 0 ]?hg)
exten => _[4-6].,n,agi(dados_new.agi,${DADOS},${CTI})
exten => _[4-6].,n,SetUniqueidApp(${ID},${FILA},${CTI},${USER},${DUR},${URA},${DT_GRAV},${EXTEN:0:4},${CHANNEL_ID})
exten => _[4-6].,n,SetUniqueidBil(${UNIQUEIDBIL})
exten => _[4-6].,n,Set(CALLERID(num)=${CALLERID(name)})
exten => _[4-6].,n,noop();SetRamalTransfer(${EXTEN:0:4})
exten => _[4-6].,n,NoOp(${DIALEDPEERNAME})
exten => _[4-6].,n,NoOp(${SIPDOMAIN})
;exten => _[4-6].,n,Dial(PJSIP/${RAMAL},30,gF(limpa_idBil^s^1))
exten => _[4-6].,n,Dial(PJSIP/${RAMAL},30,tT);,gF(limpa_idBil^s^1)B)
exten => _[4-6].,n,Execif($[ "${DIALSTATUS}" = "ANSWER" ]?System(echo > /dev/shm/idbil/${RAMAL}))
exten => _[4-6].,n(hg),Hangup()

;unhold
exten => _L.,1,set(repeticao=0)
exten => _L.,n(try),Wait(1)
exten => _L.,n,Dial(PJSIP/${EXTEN:2},30)
exten => _L.,n,Gotoif("$[${DIALSTATUS}"!="ANSWER"]?cn:hg)
exten => _L.,n(cn),Set(repeticao=$[ ${repeticao} + 1 ])
exten => _L.,n,Gotoif($[ ${repeticao} > 10 ]?hg:try)
exten => _L.,n(hg),Hangup()

;Recebe Monitoracao
exten => _M.,1,Answer
exten => _M.,2,Set(CALLERID(num)=monitoracao)
exten => _M.,3,Set(CALLERID(name)=monitoracao)
exten => _M.,4,Set(RAMAL=${EXTEN:1})
exten => _M.,5,Dial(PJSIP/${RAMAL},30,tT)
exten => _M.,6,Hangup



;#############################################################################################################
;supervisor
[1002]
include => default
include => 1001

;Monitoracao Novo
exten => _*1002.,1,Answer
exten => _*1002.,2,Agi(monitoracao/monitorar.agi,${EXTEN})
exten => _*1002.,3,Hangup
exten => *NULL,1,Answer ; exten para receber monitoracao.

;Intercalar Novo
exten => _*1003.,1,Answer
exten => _*1003.,2,Agi(monitoracao/monitorar.agi,${EXTEN})
exten => _*1003.,3,Hangup

;Consultar Novo
exten => _*1004.,1,Answer
exten => _*1004.,2,Agi(monitoracao/monitorar.agi,${EXTEN})
exten => _*1004.,3,Hangup

;#############################################################################################################
;Operador
[1001]
include => 1002

exten => _L.,1,Answer()
exten => _L.,n,Set(RAMAL=${EXTEN:2})
exten => _L.,n,Noop(${UNIQUEID})
exten => _L.,n,Noop(${ID})
exten => _L.,n,Dial(PJSIP/151615-${ID}@URA${ID:0:2},60,gtT)
exten => _L.,n,Agi(envia_cti_web.agi,${RAMAL},${ID})
exten => _L.,n,System("php /var/www/html/comunix/get_ura.php ${RAMAL}")
exten => _L.,n,wait(5)

;Login
exten => _*71.,1,Answer()
exten => _*71.,2,Set(CDR(userfield)=*71)
exten => _*71.,3,LoginAgent(${CHANNEL:4:4},${EXTEN:3:6})
exten => _*71.,4,Hangup()

;Logout
exten => *85,1,Answer()
exten => *85,2,Set(CDR(userfield)=*85)
exten => *85,3,LogoutRamal(${CHANNEL:4:4})
exten => *85,4,Hangup()

;Pausas
exten => _*7[2-9],1,Answer()
exten => _*7[2-9],2,Set(PAUSA=${EXTEN})
exten => _*7[2-9],3,goto(pausas,s,1)

exten => _*8[01236789],1,Answer()
exten => _*8[01236789],2,Set(PAUSA=${EXTEN})
exten => _*8[01236789],3,goto(pausas,s,1)

exten => _*9[0-4],1,Answer()
exten => _*9[0-4],2,Set(PAUSA=${EXTEN})
exten => _*9[0-4],3,goto(pausas,s,1)

;Tirar da pausa
exten => *84,1,Answer()
exten => *84,n,Set(CDR(userfield)=*84)
exten => *84,n,system(rm /dev/shm/${CHANNEL:4:4}_pause)
exten => *84,n,PlayBack(/var/lib/asterisk/sistema/M_00009); Programacao Aceita
exten => *84,n,Hangup

;#############################################################################################################
;LIGACOES EXTERNAS VALIDO.
exten => _0.,1,NoOp()
exten => _0.,n,Set(CD_AGENTE=${SHELL(cat /home/extend/tmp/tmp_tr_agente_eventos | cut -d'\;' -f1,10 | grep '${CHANNEL:6:4}' | cut -d'\;' -f1 | tr -d '\n' )})
exten => _0.,n,Set(CD_CAMPANHA=${SHELL(cat /home/extend/tmp/tmp_tr_agente_eventos | cut -d'\;' -f6,10 | grep '${CHANNEL:6:4}' | cut -d'\;' -f1 | tr -d '\n' )})
exten => _0.,n,Set(ID=${UNIQUEID})
exten => _0.,n,GotoIf($[${CD_CAMPANHA} = 0]?nao_logado)
exten => _0.,n,CdrCMX(${CHANNEL:6:4},${EXTEN:1},${CD_CAMPANHA})
exten => _0.,n,agi(ativo_pjsip.agi,${EXTEN},${ID})
exten => _0.,n,Noop(${ID})
exten => _0.,n,agi(uniqueid.agi,${ID})
exten => _0.,n,Set(CLID=${EXTEN:1})
exten => _0.,n,Set(COD=${CD_CAMPANHA})
exten => _0.,n,Set(FILA='q0000')
exten => _0.,n,Set(CALLFILENAME1=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S):0:4}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S):4:2}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S):6:2}/)
exten => _0.,n,Set(CALLFILENAME2=${SUPPORT_MONITOR_PATH_ATIVO}${CALLFILENAME1}99${NEW_UNIQUEID})
exten => _0.,n,System(mkdir -p ${SUPPORT_MONITOR_PATH_ATIVO}${CALLFILENAME1} &)
exten => _0.,n,Set(MONITOR_EXEC_ARGS=/home/extend/./cp_gravacao_ativo ${CALLFILENAME2}.WAV &)
exten => _0.,n,MixMonitor(${CALLFILENAME2}.WAV,,/home/extend/./cp_gravacao_ativo ${CALLFILENAME2}.WAV);Gravacao compactada
;exten => _0.,n,Gosub(setIdBil,1,1)
;exten => _0.,n,Answer()
exten => _0.,n,Dial(${ROTA_DIAL},60,tTg)
exten => _0.,n,noop(${DIALSTATUS})
exten => _0.,n,GotoIf($["${DIALSTATUS}" = "ANSWER"]?hangup)
exten => _0.,n,GotoIf($["${DIALSTATUS}" = "BUSY"]?num_ocupado:falha)
exten => _0.,n(num_ocupado),PlayBack(/var/lib/asterisk/sistema/M_00011); Numero ocupado
exten => _0.,n,Hangup()
exten => _0.,n(falha),noop();PlayBack(/var/lib/asterisk/sistema/M_00012); Falha na Chamada
exten => _0.,n,Hangup()
exten => _0.,n(nao_logado),PlayBack(/var/lib/asterisk/sistema/M_00010); Operador nao logado ou nao associado a campanha
exten => _0.,n,Hangup()
exten => _0.,n(blacklist),PlayBack(/var/lib/asterisk/sistema/M_00013); Numero bloqueado para chamadas do tipo ativa
exten => _0.,n(hangup),Hangup()


;####################TRANSFERNCIA DE RAMAIS##########################################################################################
exten => _[2-6]XXX,1,NoOp()
exten => _[2-6]XXX,n,Set(CD_AGENTE=${SHELL(cat /home/extend/tmp/tmp_tr_agente_eventos | cut -d'\;' -f1,10 | grep '${CHANNEL:6:4}' | cut -d'\;' -f1 | tr -d '\n' )})
exten => _[2-6]XXX,n,Set(CD_CAMPANHA=${SHELL(cat /home/extend/tmp/tmp_tr_agente_eventos | cut -d'\;' -f6,10 | grep '${CHANNEL:6:4}' | cut -d'\;' -f1 | tr -d '\n' )})
exten => _[2-6]XXX,n,Set(CD_RAMAL=${CHANNEL:6:4})
exten => _[2-6]XXX,n,Set(ID=${UNIQUEID})
exten => _[2-6]XXX,n,CdrCMX(${CHANNEL:6:4},${EXTEN},${CD_CAMPANHA},00,1)
exten => _[2-6]XXX,n,agi(separa_dados_CdrCMX.agi,${GetContaRamal},${CD_RAMAL}); retira a informação do cti para não dar problema ao enviar para a URA. e adiciona outra informação no campo CTI
exten => _[2-6]XXX,n,Set(__CTI=${CTI})
exten => _[2-6]XXX,n,agi(uniqueid.agi,${ID})
exten => _[2-6]XXX,n,Set(FILA='q0000')
exten => _[2-6]XXX,n,Set(CALLFILENAME1=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S):0:4}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S):4:2}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S):6:2}/)
exten => _[2-6]XXX,n,Set(CALLFILENAME2=${SUPPORT_MONITOR_PATH_ATIVO}${CALLFILENAME1}99${NEW_UNIQUEID})
exten => _[2-6]XXX,n,System(mkdir -p ${SUPPORT_MONITOR_PATH_ATIVO}${CALLFILENAME1} &)
exten => _[2-6]XXX,n,Set(MONITOR_EXEC_ARGS=/home/extend/./cp_gravacao_ativo ${CALLFILENAME2}.WAV &)
exten => _[2-6]XXX,n,MixMonitor(${CALLFILENAME2}.WAV,,/home/extend/./cp_gravacao_ativo ${CALLFILENAME2}.WAV);Gravacao compactada
exten => _[2-6]XXX,n,Dial(PJSIP/R${EXTEN}-${GetContaRamal}@URA00,60,gtT)
exten => _[2-6]XXX,n,Hangup



;;######################################################################################################################
;Transferencia para servicos sem botão
exten => _1XXX,1,Answer()
exten => _1XXX,n,Set(URA_P=0${RAND(6,8)})
exten => _1XXX,n,TransferCMX(${URA_P},${EXTEN})
;exten => _1XXX,n,GetContaRamal(${UNIQUEID})
exten => _1XXX,n,noop(${GetContaRamal})
exten => _1XXX,n,agi(separa_dados.agi,${GetContaRamal}); retira a informação do cti para não dar problema ao enviar para a URA.
exten => _1XXX,n,Set(__CTI=${CTI})
exten => _1XXX,n,Gosub(setIdBil,1,1)
exten => _1XXX,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _1XXX,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _1XXX,n(verdadeiro),noop();
exten => _1XXX,n,TransferCMX(${URA_P},${EXTEN})
exten => _1XXX,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _1XXX,n(falso),Hangup()

exten => _TC1XXX,1,NoOp()
exten => _TC1XXX,n,Set(URA_P=0${RAND(6,8)})
exten => _TC1XXX,n,CdrCMX(${CHANNEL:6:4},${EXTEN:2},1,${URA_P},1)
exten => _TC1XXX,n,noop(NUMEROS -> ${CLID} ${CALLERID(name)} ${CALLERID(num)})
exten => _TC1XXX,n,Set(RAMAL=${CALLERID(num)})
exten => _TC1XXX,n,agi(separa_dados_2.agi,${GetContaRamal}); retira a informação do cti para não dar problema ao enviar para a URA.
exten => _TC1XXX,n,Set(__CTI=${CTI})
exten => _TC1XXX,n,Gosub(setIdBil,1,1)
exten => _TC1XXX,n,Dial(PJSIP/${EXTEN:2}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _TC1XXX,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _TC1XXX,n(verdadeiro),NoOp()
exten => _TC1XXX,n,Dial(PJSIP/${EXTEN:2}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _TC1XXX,n(falso),Hangup()


;######################################################################################################################
;Transferencia para servicos com botão
exten => _21XXX,1,Set(URA_P=0${RAND(6,8)})
exten => _21XXX,n,CdrCMX(${CHANNEL:6:4},${EXTEN:1},1,${URA_P},1)
exten => _21XXX,n,noop(${GetContaRamal})
exten => _21XXX,n,Set(ID=${UNIQUEID})
exten => _21XXX,n,Set(RAMAL=${CALLERID(num)})
exten => _21XXX,n,Set(CLID=${EXTEN:1})
exten => _21XXX,n,agi(separa_dados_2.agi,${GetContaRamal}); retira a informação do cti para não dar problema ao enviar para a URA.
exten => _21XXX,n,Set(__CTI=${CTI})
exten => _21XXX,n,Gosub(setIdBil,1,1)
exten => _21XXX,n,NoOp(${GetContaRamal:6})
exten => _21XXX,n,Dial(PJSIP/${EXTEN:1}-${EXTEN:1}-0-99${UNIQUEID}-${GetContaRamal:6}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _21XXX,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _21XXX,n(verdadeiro),noop();
exten => _21XXX,n,Dial(PJSIP/${EXTEN:1}-${EXTEN:1}-0-99${UNIQUEID}-${GetContaRamal:6}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _21XXX,n(falso),Hangup()

;######################################################################################################################
;Transferencia para servicos com botão
exten => _27075,1,CdrCMX(${CHANNEL:6:4},${EXTEN:1},1,00,1)
exten => _27075,n,Set(RAMAL=${CALLERID(num)})
exten => _27075,n,noop(${GetContaRamal})
exten => _27075,n,Set(ID=${UNIQUEID})
exten => _27075,n,agi(separa_dados_2.agi,${GetContaRamal}); retira a informação do cti para não dar problema ao enviar para a URA.
exten => _27075,n,Set(__CTI=${CTI})
exten => _27075,n,Gosub(setIdBil,1,1)
exten => _27075,n,Dial(PJSIP/${EXTEN:1}-${GetContaRamal}@URA00,60,gtTb(sip_handler_transf^addheader^1))
exten => _27075,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _27075,n(verdadeiro),noop();
exten => _27075,n,Dial(PJSIP/${EXTEN:1}-${GetContaRamal}@URA00,60,gtTb(sip_handler_transf^addheader^1))
exten => _27075,n(falso),Hangup()

;Transferencia para pesquisa
exten => _707[0-5],1,Answer()
exten => _707[0-5],n,Set(URA_P=0${RAND(7,8)})
exten => _707[0-5],n,TransferCMX(${URA_P},${EXTEN})
;exten => _707[0-5],n,GetContaRamal(${UNIQUEID})
exten => _707[0-5],n,agi(separa_dados.agi,${GetContaRamal})
exten => _707[0-5],n,Set(__CTI=${CTI})
exten => _707[0-5],n,Set(IDBIL=${CHANNEL:4:4})
exten => _707[0-5],n,Gosub(setIdBil,1,1)
exten => _707[0-5],n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _707[0-5],n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _707[0-5],n(verdadeiro),TransferCMX(${URA_P},${EXTEN})
exten => _707[0-5],n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _707[0-5],n(falso),Hangup()

;------------------------------------------------------------------------
;Transferencia para pos_encerramento_trote
exten => _8081,1,Answer()
exten => _8081,n,Set(URA_P=0${RAND(6,8)})
exten => _8081,n,TransferCMX(${URA_P},${EXTEN})
exten => _8081,n,agi(separa_dados.agi,${GetContaRamal})
exten => _8081,n,Set(__CTI=${CTI})
exten => _8081,n,Set(IDBIL=${CHANNEL:4:4})
exten => _8081,n,Gosub(setIdBil,1,1)
exten => _8081,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8081,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _8081,n(verdadeiro),TransferCMX(${URA_P},${EXTEN})
exten => _8081,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8081,n(falso),Hangup()

;Transferencia para pos_encerramento_problema
exten => _8082,1,Answer()
exten => _8082,n,Set(URA_P=0${RAND(6,8)})
exten => _8082,n,TransferCMX(${URA_P},${EXTEN})
exten => _8082,n,agi(separa_dados.agi,${GetContaRamal})
exten => _8082,n,Set(__CTI=${CTI})
exten => _8082,n,Set(IDBIL=${CHANNEL:4:4})
exten => _8082,n,Gosub(setIdBil,1,1)
exten => _8082,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8082,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _8082,n(verdadeiro),TransferCMX(${URA_P},${EXTEN})
exten => _8082,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8082,n(falso),Hangup()

;Transferencia para pos_encerramento_mudo
exten => _8083,1,Answer()
exten => _8083,n,Set(URA_P=0${RAND(6,8)})
exten => _8083,n,TransferCMX(${URA_P},${EXTEN})
exten => _8083,n,agi(separa_dados.agi,${GetContaRamal})
exten => _8083,n,Set(IDBIL=${CHANNEL:4:4})
exten => _8083,n,Set(__CTI=${CTI})
exten => _8083,n,Gosub(setIdBil,1,1)
exten => _8083,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8083,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _8083,n(verdadeiro),TransferCMX(${URA_P},${EXTEN})
exten => _8083,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8083,n(falso),Hangup()

;Transferencia para pos_manobra
exten => _8084,1,Answer()
exten => _8084,n,Set(URA_P=0${RAND(6,8)})
exten => _8084,n,TransferCMX(${URA_P},${EXTEN})
exten => _8084,n,agi(separa_dados.agi,${GetContaRamal})
exten => _8084,n,Set(IDBIL=${CHANNEL:4:4})
exten => _8084,n,Set(__CTI=${CTI})
exten => _8084,n,Gosub(setIdBil,1,1)
exten => _8084,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8084,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _8084,n(verdadeiro),TransferCMX(${URA_P},${EXTEN})
exten => _8084,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8084,n(falso),Hangup()

;Transferencia para pos_protocolo
exten => _8085,1,Answer()
exten => _8085,n,Set(URA_P=0${RAND(6,8)})
exten => _8085,n,TransferCMX(${URA_P},${EXTEN})
exten => _8085,n,agi(separa_dados.agi,${GetContaRamal})
exten => _8085,n,Set(IDBIL=${CHANNEL:4:4})
exten => _8085,n,Set(__CTI=${CTI})
exten => _8085,n,Gosub(setIdBil,1,1)
exten => _8085,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8085,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?verdadeiro:falso)  ; ###### ERRO NO ANSWER ######
exten => _8085,n(verdadeiro),TransferCMX(${URA_P},${EXTEN})
exten => _8085,n,Dial(PJSIP/${EXTEN}-${GetContaRamal}@URA${URA_P},60,gtTb(sip_handler_transf^addheader^1))
exten => _8085,n(falso),Hangup()
;------------------------------------------------------------------------

exten => _8181.,1,Answer()
exten => _8181.,n,Wait(3)
exten => _8181.,n,Hangup()

;######################################################################################################################
;Pausas
[pausas]
exten => s,1,Set(CDR(userfield)=${PAUSA})
exten => s,2,system(echo ${PAUSA} > /dev/shm/${CHANNEL:4:4}_pause)
exten => s,3,PlayBack(/var/lib/asterisk/sistema/M_00009); Programacao Aceita
exten => s,4,Hangup()

;#############################################################################################################
;Logout Agente
[logout]
exten => s,1,agi(agente_eventos_logout.agi)
exten => s,2,Gotoif($[${LOGIN} = 1 ]?3:5)
exten => s,3,BackGround(/var/lib/asterisk/sistema/M_00005);Agente deslogado
exten => s,4,Hangup()
exten => s,5,BackGround(/var/lib/asterisk/sistema/M_00003);Logout Incorreto
exten => s,6,Hangup()

;#############################################################################################################
;Mensagem para celular
[PLAY_MSG]
exten => s,1,Answer()
exten => s,2,Wait(3)
exten => s,3,PlayBack(${CONSULT_MSG}) 
;######################################################################################################################
[monitoracao]
exten => _*1003.,1,Answer
exten => _*1003.,2,Set(RAMAL_OP=${EXTEN:6:4})
exten => _*1003.,3,ChanSpy(PJSIP/${RAMAL_OP},bq)
exten => _*1005.,1,Answer
exten => _*1005.,2,Set(RAMAL_SUP=${EXTEN:6:4})
exten => _*1005.,3,Set(IP_SIP=${EXTEN:11})
exten => _*1005.,4,Dial(PJSIP/M${RAMAL_SUP}@${IP_SIP},30)
exten => _*1005.,5,Hangup
;######################################################################################################################
[intercalar]
exten => _*1003.,1,Answer
exten => _*1003.,2,Set(RAMAL_OP=${EXTEN:6:4})
exten => _*1003.,3,ChanSpy(PJSIP/${RAMAL_OP},qbw)
exten => _*1005.,1,Answer
exten => _*1005.,2,Set(RAMAL_SUP=${EXTEN:6:4})
exten => _*1005.,3,Set(IP_SIP=${EXTEN:11})
exten => _*1005.,4,Dial(PJSIP/M${RAMAL_SUP}@${IP_SIP},30)
exten => _*1005.,5,Hangup
;######################################################################################################################
[consultar]
exten => _*1003.,1,Answer
exten => _*1003.,2,Set(RAMAL_OP=${EXTEN:6:4})
exten => _*1003.,3,Dial(PJSIP/${RAMAL_OP},60)
exten => _*1005.,1,Answer
exten => _*1005.,2,Set(RAMAL_SUP=${EXTEN:6:4})
exten => _*1005.,3,Set(IP_SIP=${EXTEN:11})
exten => _*1005.,4,Dial(PJSIP/M${RAMAL_SUP}@${IP_SIP},30)
exten => _*1005.,5,Hangup

[sip_handler_transf]
exten => addheader,1,Set(PJSIP_HEADER(add,X-CTI)=${CTI})
exten => addheader,n,Set(PJSIP_HEADER(add,UniqueidBil)=${UNIQUEIDBIL})

;[setIdBil]
;exten => 1,1,noop(${GetContaRamal}-${RAMAL})
;exten => 1,n,Agi(uniqueidbil.agi,${RAMAL})
;exten => 1,n,Set(__UNIQUEIDBIL=${UNIQUEIDBIL})
;exten => 1,n,ExecIf($[ "${UNIQUEIDBIL}" = ""]?Set(__UNIQUEIDBIL=99${ID}))
;exten => 1,n,SetUniqueidBil(${UNIQUEIDBIL})
;exten => 1,n,Return
;
;[limpa_idBil]
;exten => s,1,System(echo > /dev/shm/idbil/${CHANNEL:6:4})
;
;[record]
;exten => s,1,Wait(1)
;exten => s,n,set(USER=${ARG1})
;exten => s,n,System(mkdir -p /var/lib/asterisk/sounds/saudacao/${USER}/in)
;exten => s,n,noop(${ARG1}-${ARG3}-${CHANNEL})
;exten => s,n,GotoIfTime(00:00-11:59,*,*,*?:boa_tarde)
;exten => s,n,agi(trata_saudacao.agi,${USER},0)
;exten => s,n,Playback(saudacao/${USER}/0)
;exten => s,n,goto(fim)
;exten => s,n(boa_tarde),GotoIfTime(12:00-17:59,*,*,*?:boa_noite)
;exten => s,n,agi(trata_saudacao.agi,${USER},1)
;exten => s,n,Playback(saudacao/${USER}/1)
;exten => s,n,goto(fim)
;exten => s,n(boa_noite),agi(trata_saudacao.agi,${USER},2)
;exten => s,n,Playback(saudacao/${USER}/2)
;exten => s,n(fim),return
;
;[record2]
;exten => s,1,Wait(1)
;exten => s,n,set(USER=${ARG1})
;exten => s,n,System(mkdir -p /var/lib/asterisk/sounds/saudacao/${USER}/in)
;exten => s,n,noop(${ARG1}-${ARG3}-${CHANNEL})
;exten => s,n,GotoIfTime(00:00-11:59,*,*,*?:boa_tarde)
;exten => s,n,agi(trata_saudacao.agi,${USER},0)
;exten => s,n,Playback(saudacao/${USER}/0)
;exten => s,n,goto(fim)
;exten => s,n(boa_tarde),GotoIfTime(12:00-17:59,*,*,*?:boa_noite)
;exten => s,n,agi(trata_saudacao.agi,${USER},1)
;exten => s,n,Playback(saudacao/${USER}/1)
;exten => s,n,goto(fim)
;exten => s,n(boa_noite),agi(trata_saudacao.agi,${USER},2)
;exten => s,n,Playback(saudacao/${USER}/2)
;exten => s,n(fim),return

